name: SonarCloud Scan

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarcloud-scan:
    # ↓ Change this to "false" to disable the workflow without any alert messages.
    if: ${{ true }}
    # ↑ Change to "true" (or delete) to enable the workflow.

    name: Analyze with SonarCloud
    runs-on: windows-latest
    steps:
      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu" # Alternative distribution options are available.

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install Coverlet as global dotnet tool
        shell: powershell
        run: |
          dotnet tool install --global coverlet.console

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"dougwaldron_podcast-rewind" /o:"dougwaldron" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=coverage.xml
          dotnet build
          coverlet .\PodcastRewind.Tests\bin\Debug\net8.0\DomainTests.dll --target "dotnet" --targetargs "test PodcastRewind.Tests --no-build"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
