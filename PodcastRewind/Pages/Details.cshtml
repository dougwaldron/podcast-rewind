@page "{id:Guid?}"
@model DetailsModel
@{
    ViewData["Title"] = $"Podcast\u2009⏪\u2009Rewind for {Model.FeedRewindData.FeedTitle}";
}

<h1>
    @if (Model.RewoundFeed != null && Model.RewoundFeed.ImageUrl != null)
    {
        <img class="img-fluid rounded-start float-start" height="100" width="100" alt="" src="@Model.RewoundFeed.ImageUrl.ToString()" />
    }
    Podcast&#x2009;⏪&#x2009;Rewind for:<br />
    <em>@Model.FeedRewindData.FeedTitle</em>
</h1>

<p>
    <div class="btn-group" role="group">
        <a class="btn btn-lg btn-outline-light btn-icon text-dark border-dark me-1 rss-link-button" href="@Model.RewindFeedUrl"><img src="/img/rss.svg" alt="" aria-hidden="true" /> RSS Link</a>
        <button class="btn btn-lg btn-outline-light btn-icon text-dark border-dark me-1 rss-clipboard-button" 
                onclick="copyToClipboard(this)" data-link="@Model.RewindFeedUrl">
            <img src="/img/clipboard.svg" alt="" aria-hidden="true"/>
        </button>
    </div>
    <a class="btn btn-lg btn-outline-light btn-icon text-dark border-dark me-1" href="overcast://x-callback-url/add?url=@Model.RewindFeedUrl"><img src="/img/overcast-logo.svg" alt="" aria-hidden="true" /> Subscribe in Overcast</a>
    <a class="btn btn-lg btn-outline-light btn-icon text-dark border-dark me-1" href="@Model.ApplePodcastSubscribeUrl">
        <img src="/img/apple-podcasts.svg" alt="Listen on Apple Podcasts" />
    </a>
</p>

<p>
    <a class="btn btn-outline-primary" asp-page="Edit" asp-route-id="@Model.RewindFeedId">Edit Podcast&#x2009;⏪&#x2009;Rewind Settings</a>
</p>

<div class="row">
    <div class="col-lg">
        <h3>Rewound Episodes So Far</h3>
        @if (Model.RewoundFeed != null && Model.RewoundFeed.Items.Any())
        {
            <div class="vh-50 overflow-scroll-y mb-3 border border-3 border-secondary rounded">
                <div class="card">
                    <ul class="list-group list-group-flush">
                        @foreach (var episode in Model.RewoundFeed.Items)
                        {
                            <li class="list-group-item p-0">
                                @Html.DisplayFor(m => episode.PublishDate): <strong>@episode.Title.Text</strong>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            @:None
        }
    </div>

    <div class="col-lg">
        <h3>Upcoming Episodes</h3>
        @if (Model.ScheduledFeed != null && Model.ScheduledFeed.Items.Any())
        {
            <div class="vh-50 overflow-scroll-y mb-3 border border-3 border-secondary rounded">
                <div class="card">
                    <ul class="list-group list-group-flush">
                        @foreach (var episode in Model.ScheduledFeed.Items)
                        {
                            <li class="list-group-item p-0">
                                @Html.DisplayFor(m => episode.PublishDate): <strong>@episode.Title.Text</strong>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        else
        {
            @:None
        }
    </div>
</div>
