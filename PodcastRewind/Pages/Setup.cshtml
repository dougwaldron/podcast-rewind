@page
@using PodcastRewind.Models
@model SetupModel
@{
    ViewData["Title"] = $"Create {Constants.Logo} for {Model.PodcastTitle}";
}

<h1>Create a <span class="pr-logo">@Constants.Logo</span> Feed for:</h1>

<div class="d-flex flex-row justify-content-start align-items-center mb-3 bg-warning bg-opacity-10">
    @if (!string.IsNullOrEmpty(Model.PodcastImageUrl))
    {
        <img class="img-fluid rounded-start me-2" src="@Model.PodcastImageUrl" height="100" width="100" alt="" />
    }
    <h2>@Model.PodcastTitle</h2>
</div>

@if (Model.PodcastEpisodes.Count == 0)
{
    <p>That podcast feed doesn't seem to have any episodes!</p>
}
else
{
    <p class="lead">Setting up a new <span class="pr-logo">@Constants.Logo</span> is easy!</p>

    <form method="post">
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

        <p>
            First, choose which episode to set as the &ldquo;most recent&rdquo; for your new feed.
            Episodes that have been released after the one you select will be delivered later.
            If you want to start at the beginning, just leave the first episode selected.
        </p>

        <div class="fw-semibold mb-2">@Html.DisplayNameFor(m => m.CreateFeedRewind.KeyEntryId)</div>
        <span asp-validation-for="CreateFeedRewind.KeyEntryId" class="text-danger"></span>
        <div class="vh-50 overflow-scroll-y mb-3 border border-3 border-secondary rounded">
            <div class="card">
                <ul class="list-group list-group-flush">
                    @foreach (var episode in Model.PodcastEpisodes)
                    {
                        <li class="list-group-item p-0">
                            <div class="form-check mb-0">
                                <label class="form-check-label p-2 d-block" for="e-@episode.NormalizedId">
                                    <input class="form-check-input" type="radio" asp-for="CreateFeedRewind.KeyEntryId" value="@episode.Id" id="e-@episode.NormalizedId" />
                                    @Html.DisplayFor(m => episode.PublishDate): <strong>@episode.Title</strong>
                                </label>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="row align-items-end">
            <div class="col-md mb-3">
                <p>Next, choose a date for the entry you selected above. (You probably just want this set to today.)</p>
                <label class="form-label fw-semibold" asp-for="CreateFeedRewind.DateOfKeyEntry"></label>
                <input class="form-control form-control-lg" asp-for="CreateFeedRewind.DateOfKeyEntry" />
                <span asp-validation-for="CreateFeedRewind.DateOfKeyEntry" class="text-danger"></span>
            </div>
            <div class="col-md mb-3">
                <p>Last decision: how often do you want new episodes?</p>
                <label class="form-label fw-semibold" asp-for="CreateFeedRewind.Interval"></label>
                <input class="form-control form-control-lg" asp-for="CreateFeedRewind.Interval" inputmode="numeric" />
                <span asp-validation-for="CreateFeedRewind.Interval" class="text-danger"></span>
            </div>
        </div>

        <div>
            <input type="hidden" asp-for="CreateFeedRewind.FeedUrl" />
            <button class="btn btn-primary btn-lg me-2 mb-3" type="submit">Generate Podcast Rewind Feed</button>
            <a asp-page="Index" class="btn btn-outline-secondary btn-lg mb-3">Cancel</a>
        </div>
    </form>
}

@section Scripts
{
<partial name="_ValidationScriptsPartial" />
}
